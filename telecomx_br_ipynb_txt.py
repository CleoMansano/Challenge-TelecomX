# -*- coding: utf-8 -*-
"""TelecomX_BR.ipynb.txt

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KtjgftEDK0c3H9VSbhoeqFgL_kj9QGQ1

#游늷 Extrac칚o
"""

import pandas as pd
import requests
import json
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
import plotly.express as px

url = 'https://raw.githubusercontent.com/ingridcristh/challenge2-data-science/main/TelecomX_Data.json'
df = pd.read_json(url)
df.head()

"""#游댢 Transforma칞칚o"""

df = requests.get(url)
resultado = json.loads(df.text)

df = pd.json_normalize(resultado, sep='/')
df.head()

### dicion치rio de tradu칞칚o
colunas_traduzidas = {
    'customerID': 'id_Cliente',
    'Churn': 'cancelamento',
    'customer/gender': 'genero',
    'customer/SeniorCitizen': 'idoso',
    'customer/Partner': 'conjuge',
    'customer/Dependents': 'possui_dependentes',
    'customer/tenure': 'meses_de_contrato',
    'phone/PhoneService': 'telefone_ativo',
    'phone/MultipleLines': 'multiplas_linhas',
    'internet/InternetService': 'tipo_internet',
    'internet/OnlineSecurity': 'seguranca_online',
    'internet/OnlineBackup': 'backup_online',
    'internet/DeviceProtection': 'protecao_dispositivo',
    'internet/TechSupport': 'suporte_tecnico',
    'internet/StreamingTV': 'tv_cabo',
    'internet/StreamingMovies': 'streaming_filmes',
    'account/Contract': 'tipo_contrato',
    'account/PaperlessBilling': 'fatura_digital',
    'account/PaymentMethod': 'forma_pagamento',
    'account/Charges/Monthly': 'gasto_mensal',
    'account/Charges/Total': 'gasto_total',
    }
# renomeando as colunas
df.rename(columns=colunas_traduzidas, inplace=True)
df.info()

df.head()

df['gasto_total'] = pd.to_numeric(df['gasto_total'], errors='coerce')
df[['gasto_total']] = df[['gasto_total']].astype(np.float64)

df['idoso'] = df[['idoso']].astype(bool)

df_sem_duplicatas = df.drop_duplicates(subset=['id_Cliente'], keep='first')
df_sem_duplicatas

valores_nulos = df[df.isnull().any(axis=1)]
contagem_nulos = df.isnull().sum()
contagem_nulos

df = df[df['gasto_total'].notnull()] #remover valores nulos da coluna gasto total
contagem_nulos

#dados em branco
df.apply(lambda x: x.astype(str).str.strip() == '').sum()

#eliminar dados est칚o em branco
df = df[df['cancelamento'].str.strip() != '']
print("N칰mero de linhas depois de eliminar as linhas vazias  'Cancelamento':", len(df))

df = df.drop('gasto_diario', errors='ignore')
df['gasto_diario'] = ((df['gasto_total'] / df['meses_de_contrato']) / 30).round(2) #calcule o gasto diario / tempo de contrato

#inserindo a coluna
df.insert(19, 'gasto_diario', df.pop('gasto_diario'))

df.head()

df.describe() #resumo dos valores

"""#游늵 Carga e an치lise"""

# Paleta de cores pastel
cores_pastel = ['#FFB3BA', '#BAFFC9', '#BAE1FF', '#FFDFBA', '#E0BBE4']

# Quantidade de clientes que cancelaram
contagem_cancelamento = df['cancelamento'].value_counts().reset_index()
contagem_cancelamento.columns = ['cancelamento', 'quantidade']

# Gr치fico de pizza
fig = px.pie(
    contagem_cancelamento,
    names='cancelamento',
    values='quantidade',
    title='Vis칚o Geral de Cancelamentos Telecom X',
    color_discrete_sequence=cores_pastel
)

fig.update_layout(
    width=1200,
    height=600,
    font_size=15,
    font_family='Arial',
    title_font_color='black',
    title_x=0.5
)

fig.show()

#Cancelamentos = N칰mero de Pessoas que Cancelaram / n칰mero total m칡s
df_cancelamento = (df['cancelamento'] == 'Yes').sum()
print(f"Total de Cancelamentos (Yes): {df_cancelamento}")

df_cancelamento = (df['cancelamento'] == 'No').sum()
print(f"Total de Cancelamentos (No): {df_cancelamento}")

# Paleta de cores pastel
cores_pastel = ['#FFB3BA', '#BAE1FF', '#FFDFBA', '#BAFFC9', '#E0BBE4']

contagem_genero = df['genero'].value_counts().reset_index()  # total homem x mulher
contagem_genero.columns = ['genero', 'quantidade']

# Gr치fico de pizza
fig = px.pie(
    contagem_genero,
    names='genero',
    values='quantidade',
    title='Divis칚o de Clientes da Telecom X por G칡nero',
    color_discrete_sequence=cores_pastel
)

fig.update_layout(
    width=900,
    height=600,
    font_size=15,
    font_family='Arial',
    title_font_color='black',
    title_x=0.5
)

fig.show()

# Agrupa por forma de pagamento e cancelamento, conta os clientes
df_genero = df.groupby(['genero', 'cancelamento']).size().reset_index(name='quantidade')

# Calcula o total de clientes por forma de pagamento
df_genero['total'] = df_genero.groupby('genero')['quantidade'].transform('sum')

# Calcula a porcentagem de cancelamento para cada grupo
df_genero['porcentagem'] = (df_genero['quantidade'] / df_genero['total']) * 100


fig = px.bar(df_genero, x='genero', y='porcentagem', color='cancelamento', barmode='group', text='porcentagem', title='Taxa de Cancelamento (%) por Genero',
    color_discrete_map={ #fun칞칚o para decidir as cores de cada valor dentro do nosso gr치fico
        'Yes': 'aqua',
        'No': 'salmon'
    }
)

fig.update_traces(texttemplate='%{text:.2f}%') #formata칞칚o para porcentagem no rotulo de dados das barras do gr치fico
fig.update_layout(
    width=1000,
    height=600,
    title_x=0.5,
    yaxis_title='Quantidade',
    font_family='Arial',
    title_font_color='black',
    xaxis_title='G칡nero',
    font_size=14
)

df['meses_de_contrato'].describe()

df_meses = df[df['cancelamento'] == 'Yes'].groupby('meses_de_contrato').size()
df_meses

#agrupar por meses de contrato e cancelamento
df_agrupado = df.groupby(['meses_de_contrato', 'cancelamento']).size().unstack(fill_value=0)

#calcular a taxa de cancelamento por tempo de contrato
df_agrupado['taxa_de_cancelamento'] = (df_agrupado.get('Yes', 0) / df_agrupado.sum(axis=1)) * 100

#exibir o resultado j치 formatado
df_agrupado

# Paleta pastel personalizada
cores_pastel = ['#000080']

fig = px.line(
    df_agrupado.reset_index(),
    x='meses_de_contrato',
    y='taxa_de_cancelamento',
    title='Taxa de Cancelamento por meses de Contrato',
    markers=True,
    color_discrete_sequence=cores_pastel
)

fig.update_layout(
    width=900,
    height=700,
    title_x=0.5,
    xaxis_title='Meses de Contrato',
    yaxis_title='Taxa de Cancelamento (%)',
    font_family='Arial',
    title_font_color='black',
    font_size=14
)

fig.show()

gasto_por_contrato = df.groupby('forma_pagamento')['gasto_total'].size() #agrupa as formas de pagamento e conta cada um
gasto_por_contrato

# Agrupa e conta quantos clientes por forma de pagamento em ordem crescente
clientes_forma_pagamento = df.groupby('forma_pagamento').size().reset_index(name='quantidade')
clientes_forma_pagamento = clientes_forma_pagamento.sort_values(by='quantidade', ascending=True)

# Cria o gr치fico de barras horizontais com r칩tulo de dados

cores_pastel_personalizada = [
    '#FFB3BA', '#FFDFBA', '#FFFFBA', '#BAFFC9', '#BAE1FF',
    '#E0BBE4', '#D5E8D4', '#FCE1E4', '#F7DAD9', '#C1E1DC'
]

fig = px.bar(
    clientes_forma_pagamento,
    x='quantidade',
    y='forma_pagamento',
    orientation='h',
    text='quantidade',
    title='Quantidade de Clientes por Forma de Pagamento',
    color='forma_pagamento',
    color_discrete_sequence=cores_pastel_personalizada
)

fig.update_layout(
    width=1000,
    height=550,
    font_family='Arial',
    font_size=14,
    title_font_color='black',
    title_x=0.5,
    xaxis_title='Quantidade',
    yaxis_title='Forma de Pagamento',
    showlegend=False
)

fig.show()

fig = px.scatter(df, x='meses_de_contrato', y='gasto_total', color='cancelamento', title="Meses de Contrato vs Gastos Totais e Cancelamento",
color_discrete_map={ #fun칞칚o para decidir as cores de cada valor dentro do nosso gr치fico
        'Yes': 'aqua',
        'No': 'salmon'
    }
)

fig.update_layout(
    width=1000,
    height=700,
    title_x=0.5,
    yaxis_title='Valor do Gasto Total',
    font_family='Arial',
    title_font_color='black',
    xaxis_title='Meses de Contrato',
    font_size=14
)
fig.show()

# Agrupa por forma de pagamento e cancelamento, conta os clientes
df_internet = df.groupby(['tipo_internet', 'cancelamento']).size().reset_index(name='quantidade')

# Calcula o total de clientes por forma de pagamento
df_internet['total'] = df_internet.groupby('tipo_internet')['quantidade'].transform('sum')

# Calcula a porcentagem de cancelamento para cada grupo
df_internet['porcentagem'] = (df_internet['quantidade'] / df_internet['total']) * 100


fig = px.bar(df_internet, x='tipo_internet', y='porcentagem', color='cancelamento', barmode='group', text='porcentagem', title='Taxa de Cancelamento (%) por Tipo de Internet',
    color_discrete_map={ #fun칞칚o para decidir as cores de cada valor dentro do nosso gr치fico
        'Yes': 'aqua',
        'No': 'salmon'
    }
)

fig.update_traces(texttemplate='%{text:.2f}%') #formata칞칚o para porcentagem no rotulo de dados das barras do gr치fico
fig.update_layout(
    width=950,
    height=700,
    title_x=0.5,
    yaxis_title='Quantidade',
    font_family='Arial',
    title_font_color='black',
    xaxis_title='Tipos de Internet',
    font_size=14
)

df['streaming_filmes'].value_counts()

df.head()





"""#游늯Relatorio Final

Nota-se que a maioria dos cancelamentos ocorrem nos primeiros meses de contrato, e os clientes que mais cancelam s칚o mulheres e idosos, tipo de servi칞o Fiber Optic.

Talvez exista uma falta de esclarecmento em rela칞칚o aos valores contratatos, ou o servi칞o n칚o est치 oferecendo qualidade.

Recomenda -se que, um atendende entre em contado com uma amostra de clientes cancelados e entendem melhor os motivos.
"""